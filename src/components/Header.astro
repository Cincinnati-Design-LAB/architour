---
import { getSiteConfig } from '@/content/utils/site-config';
import { Button, HeaderLink, Icon, Link, Logo } from '@components';
import { fieldPath } from '@content';

const siteConfig = await getSiteConfig();
const { site_link_label, nav_links } = siteConfig.header;
---

<header class="max-w-7xl mx-auto px-4 py-6" {...fieldPath(`${siteConfig.stackbit_id}:header`)}>
  <div class="flex justify-between items-center">
    <div class="flex flex-col">
      <Link
        className="flex space-x-2 items-center mb-4 text-secondary-500 text-xs font-semibold"
        href="https://www.designlearnandbuild.org/"
        icons={[{ name: 'arrow-left', position: 'left' }]}
        hideExternalIcon={true}
        annotations={{ self: {}, label: fieldPath('.site_link_label') }}
      >
        {site_link_label}
      </Link>
      <Link className="inline-block w-48" href="/" hideExternalIcon={true}>
        <Logo />
      </Link>
    </div>
    {/* Desktop Menu */}
    <div class="space-x-6 justify-between items-center hidden md:flex" {...fieldPath('.nav_links')}>
      {
        nav_links.map((link, index) => {
          if (link.is_button)
            return (
              <Button
                href={link.href}
                annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
              >
                {link.label}
              </Button>
            );
          return (
            <HeaderLink
              href={link.href}
              annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
            >
              {link.label}
            </HeaderLink>
          );
        })
      }
    </div>
    {/* Mobile Menu */}
    <div class="md:hidden">
      <button open-mobile-menu class="w-7"><Icon name="menu" /></button>
      <div
        id="mobile-menu"
        class="hidden fixed left-0 top-0 z-50 h-screen w-screen bg-white/90 py-12 px-6 transition-opacity duration-500 ease-in-out opacity-0"
      >
        <button close-mobile-menu class="w-6 fixed top-11 right-4 text-gray-600"
          ><Icon name="cancel" /></button
        >
        <div
          {...fieldPath('.nav_links')}
          class="flex justify-center items-center gap-6 flex-col text-xl"
        >
          {
            nav_links.map((link, index) => {
              if (link.is_button)
                return (
                  <Button
                    href={link.href}
                    annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
                  >
                    {link.label}
                  </Button>
                );
              return (
                <HeaderLink
                  href={link.href}
                  annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
                >
                  {link.label}
                </HeaderLink>
              );
            })
          }
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  const mobileMenu = document.getElementById('mobile-menu');

  const openMenuTrigger = document.querySelector('[open-mobile-menu]');
  openMenuTrigger.addEventListener('click', () => {
    mobileMenu.classList.remove('hidden');
    setTimeout(() => {
      mobileMenu.classList.remove('opacity-0');
    }, 1);
  });

  const closeMenuTrigger = document.querySelector('[close-mobile-menu]');
  closeMenuTrigger.addEventListener('click', () => {
    mobileMenu.classList.add('opacity-0');
    setTimeout(() => {
      mobileMenu.classList.add('hidden');
    }, 300);
  });
</script>
