---
import { getSiteConfig } from '@/content/utils/site-config'
import { Button, HeaderLink, Icon, Link, Logo } from '@components'
import { fieldPath } from '@content'

// const desktopLinks: Array<{ href: string; label: string; button?: boolean }> = [
//   { href: '/buildings', label: 'Building List' },
//   { href: '/tours', label: 'Walking Tours' },
//   { href: 'https://www.designlearnandbuild.org/donate', label: 'Donate', button: true },
// ]

// const mobileLinks: Array<{
//   href: string
//   icon?: IconProps['name']
//   label: string
//   button?: boolean
// }> = [
//   { href: '/buildings', icon: 'building', label: 'Building List' },
//   { href: '/tours', icon: 'eye', label: 'Walking Tours' },
//   { href: 'https://www.designlearnandbuild.org/donate', button: true, label: 'Donate' },
// ]

const siteConfig = await getSiteConfig()
const { site_link_label, nav_links } = siteConfig.header
---

<header class="max-w-7xl mx-auto px-4 py-6" {...fieldPath(`${siteConfig.stackbitId}:header`)}>
  <div class="flex justify-between items-center">
    <div class="flex flex-col">
      <Link
        className="flex space-x-2 items-center mb-4 text-secondary-500 text-xs font-semibold"
        href="https://www.designlearnandbuild.org/"
        icons={[{ name: 'arrow-left', position: 'left' }]}
        hideExternalIcon={true}
        annotations={{ self: {}, label: fieldPath('.site_link_label') }}
      >
        {site_link_label}
      </Link>
      <Link className="inline-block w-48" href="/" hideExternalIcon={true}>
        <Logo />
      </Link>
    </div>
    <div class="space-x-6 justify-between items-center hidden md:flex" {...fieldPath('.nav_links')}>
      {
        nav_links.map((link, index) => {
          if (link.is_button)
            return (
              <Button
                href={link.href}
                annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
              >
                {link.label}
              </Button>
            )
          return (
            <HeaderLink
              href={link.href}
              annotations={{ self: fieldPath(`.${index}`), label: fieldPath('.label') }}
            >
              {link.label}
            </HeaderLink>
          )
        })
      }
    </div>
    <div class="space-x-4 justify-between items-center flex md:hidden" {...fieldPath('.nav_links')}>
      {
        nav_links.map((link, index) => {
          // if (link.is_button) {
          //   return (
          //     <Button
          //       href={link.href}
          //       annotations={{ self: fieldPath(`.${index}`), label: {} }}
          //       hideExternalIcon={true}
          //     >
          //       <span class="block w-6">
          //         <Icon name={link.icon} />
          //       </span>
          //     </Button>
          //   )
          // }
          return (
            <HeaderLink
              href={link.href}
              annotations={{ self: fieldPath(`.${index}`), label: {} }}
              hideExternalIcon={true}
            >
              <span class="block w-8">
                <Icon name={link.icon} />
              </span>
            </HeaderLink>
          )
        })
      }
    </div>
  </div>
</header>
