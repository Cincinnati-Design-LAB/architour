---
import { getSiteConfig } from '@/content/utils/site-config';
import { BuildingCard, Link, PageHeader } from '@components';
import { fieldPath, getBuildingsPage } from '@content';
import { PageLayout } from '.';

export interface Props {
  page: number;
}

const siteConfig = await getSiteConfig();

const { page } = Astro.props;

const buildingsPage = await getBuildingsPage({ page });

const currentPage = buildingsPage.page;
const prevPage = currentPage - 1 || undefined;
const nextPage = currentPage + 1 <= buildingsPage.totalPages ? currentPage + 1 : undefined;
---

<PageLayout title={siteConfig.buildings.page_label}>
  <PageHeader
    title={siteConfig.buildings.page_label}
    theme={siteConfig.buildings.page_header_theme}
    icon={siteConfig.buildings.page_icon}
    annotations={{ title: fieldPath(`${siteConfig.stackbit_id}:buildings.page_label`) }}
  />

  <div class="bg-gray-100 pt-8">
    <div
      class="max-w-7xl px-4 mx-auto py-12 grid sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-y-16 gap-x-8"
    >
      {buildingsPage.buildings.map((building) => <BuildingCard {...building} />)}
    </div>

    <div
      class="pb-16 max-w-7xl mx-auto flex-col sm:flex-row flex gap-4 items-center justify-center"
    >
      {
        prevPage && (
          <div>
            <Link
              href={prevPage === 1 ? '/buildings' : `/buildings/page/${prevPage}`}
              icons={[{ name: 'arrow-left', position: 'left' }]}
            >
              Previous page
            </Link>
          </div>
        )
      }
      <span class="italic text-gray-500 text-sm">
        Page <span>{buildingsPage.page}</span> of <span>{buildingsPage.totalPages}</span>
      </span>
      {
        nextPage && (
          <div>
            <Link
              href={`/buildings/page/${nextPage}`}
              icons={[{ name: 'arrow-right', position: 'right' }]}
            >
              Next page
            </Link>
          </div>
        )
      }
    </div>
  </div>
</PageLayout>
