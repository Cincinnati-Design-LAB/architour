---
import {
  BuildingCardCompact,
  Icon,
  Link,
  PageHeader,
  ResponsiveImage,
  Stat,
  ValidationErrors,
} from '@components';
import { fieldPath, getTours, objectId, Tour } from '@content';
import { PageLayout } from '@layouts';

export async function getStaticPaths() {
  const toursEntries = await getTours();
  return toursEntries.map((tour) => ({
    params: { slug: tour.slug },
    props: { tour },
  }));
}

const tour = Astro.props.tour as Tour;
---

<PageLayout
  title={tour.title}
  class={{ main: 'bg-gray-100' }}
  bodyAnnotations={objectId(tour.stackbit_id)}
>
  <PageHeader
    title={tour.title}
    image={tour.image}
    size="lg"
    annotations={{ title: fieldPath('title') }}
  />

  <div class="max-w-7xl mx-auto relative px-4 py-16">
    {
      tour.validation_errors && tour.validation_errors.length > 0 && (
        <div class="max-w-4xl mx-auto px-4 mb-12">
          <ValidationErrors errors={tour.validation_errors} draft={tour.draft} />
        </div>
      )
    }
    <div class="grid md:grid-cols-12 gap-10 md:gap-16 mb-16">
      <div class="md:col-span-7">
        {
          tour.description?.html?.length > 0 && (
            <div
              class="text-lg mb-12"
              set:html={tour.description.html}
              {...fieldPath('description')}
            />
          )
        }
        <div class="grid grid-cols-2 gap-x-10 gap-y-6">
          <Stat label="Buildings on Tour" value={tour.buildings.length.toString()} />
          <Stat
            label="Estimated Walking Time"
            value={tour.time_estimate || '[not set]'}
            annotations={{ value: fieldPath('time_estimate') }}
          />
        </div>
      </div>

      <div class="md:col-span-5">
        {
          tour.static_map && (
            <Link className="relative group" href={tour.url_path + '/map'}>
              <ResponsiveImage src={tour.static_map.sidebar} className="border w-full" />
              <div class="top-0 left-0 h-full w-full bg-secondary-500/80 z-10 group-hover:opacity-100 transition-opacity duration-300 opacity-0 absolute">
                <div class="flex text-white justify-center items-center h-full w-full space-x-3">
                  <span class="block w-5">
                    <Icon name="expand" />
                  </span>
                  <span class="font-semibold">View Tour Map</span>
                </div>
              </div>
            </Link>
          )
        }
      </div>
    </div>

    <div class="max-w-7xl mx-auto relative">
      <div class="max-w-4xl">
        <h2 class="font-bold text-2xl md:text-3xl mb-6">Buildings on the Tour</h2>
        <div class="grid md:grid-cols-2 gap-6">
          {tour.buildings.map((building) => <BuildingCardCompact {...building} />)}
        </div>
      </div>
    </div>
  </div>
</PageLayout>
